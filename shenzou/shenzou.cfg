# -*- python -*-
# ex: set syntax=python:

import os
def sibpath(f):
    d, f2 = os.path.split(__file__)
    return os.path.join(d, f)


c['slavePortnum'] = "8079"
c['projectName'] = "Shenzou Package Builder"
c['projectURL'] = "http://github.com/Jc2k/shenzou"
c['buildbotURL'] = "http://localhost:8080/"


#
# Libvirt configuration
#
from buildbot.libvirtbuildslave import LibVirtSlave
from buildbot.libvirtbuildslave import Connection

connection = Connection("qemu:///system")
xml_template = open(sibpath("shenzou-vm.xml"), "r").read()

for host, macaddr in (("slave1", "foo"), ("slave2", "foo")):
    xml = xml_template % {
        "name": host,
        "hd_image": os.path.join(config.VM_DIR, host),
        "macaddr": macaddr,
        }
    slave = LibVirtSlave(host, "password", connection, os.path.join(config.VM_DIR, host),
                         base_image=config.VM_BASE, xml=xml, max_builds=1)
    c['slaves'].append(slave)


#
# Be able to build a package from Git
#

from buildbot.process import factory
from buildbot.steps.source import Git
from buildbot.steps.shell import ShellCommand

f = factory.BuildFactory()

f.addStep(Git(repourl="git://github.com/martin21/fio.git"))

f.addStep(ShellCommand(command="sudo /usr/lib/pbuilder/pbuilder-satisfydepends-aptitude",
    name="satisfy-deps", description="satisfy-deps"))

f.addStep(ShellCommand(command="git buildpackage",
    name="build", description="build"))

builder = {
    "name": "builder",
    "slavenames": ["slave1", "slave2"],
    "factory": f,
    }
c['builders'].append(builder)


#
# Basic scheduler, so we can build packages from GitHub commit hooks...
#

from buildbot.scheduler import Scheduler
c['schedulers'].append(Scheduler(name="builder", builderNames =["builder"]))


#
# WebStatus view for playing around with this...
#
from buildbot.status import html
c['status'].append(html.WebStatus(http_port="8080", allowForce=True))

